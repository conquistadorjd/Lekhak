# Generated by Django 3.2.12 on 2022-03-23 10:45

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255, unique=True)),
                ('category_slug', models.SlugField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment_author', models.CharField(max_length=50)),
                ('comment_author_email', models.CharField(max_length=100)),
                ('comment_author_IP', models.CharField(max_length=50)),
                ('comment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment_content', ckeditor.fields.RichTextField()),
                ('comment_status', models.CharField(choices=[('draft', 'draft'), ('submitted', 'submitted'), ('approved', 'approved'), ('published', 'published')], default='draft', max_length=10)),
                ('comment_parent', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-comment_date',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('post_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('post_content', ckeditor.fields.RichTextField()),
                ('post_title', models.TextField(blank=True, null=True)),
                ('post_excerpt', models.TextField(blank=True, null=True)),
                ('post_img', models.ImageField(blank=True, null=True, upload_to='post_images')),
                ('post_status', models.CharField(choices=[('draft', 'draft'), ('submitted', 'submitted'), ('approved', 'approved'), ('published', 'published')], default='draft', max_length=10)),
                ('post_comment_status', models.CharField(blank=True, max_length=10)),
                ('post_slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('post_author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('post_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='category_set', to='blog.category')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=255, unique=True)),
                ('tag_slug', models.SlugField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PostMeta',
            fields=[
                ('meta_id', models.AutoField(primary_key=True, serialize=False)),
                ('meta_key', models.CharField(max_length=255)),
                ('meta_value', models.TextField(blank=True, null=True)),
                ('meta_post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.post')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='post_tags',
            field=models.ManyToManyField(blank=True, to='blog.Tag'),
        ),
        migrations.CreateModel(
            name='CommentMeta',
            fields=[
                ('meta_id', models.AutoField(primary_key=True, serialize=False)),
                ('meta_key', models.CharField(max_length=255)),
                ('meta_value', models.TextField(blank=True, null=True)),
                ('meta_comment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.comment')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='comment_post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.post'),
        ),
    ]
